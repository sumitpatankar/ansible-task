---
- hosts: "masters, workers"
  # remote_user: ansible/ubuntu
  become: true
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
    - name: Create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: touch

    - name: Add conf for containerd
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: Load modules
      shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter

    - name: Set system configurations for Kubernetes networking
      blockinfile:
        file:
          path: "/etc/sysctl.d/99-kubernetes-cri.conf"
          block: |
            net.bridge.bridge-nf-call-iptables = 1
            net.ipv4.ip_forward = 1
            net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply new settings
      command: sudo sysctl --system

    - name: Install containerd
      shell: |
        sudo apt-get update && sudo apt-get install -y containerd
        sudo mkdir -p /etc/containerd
        sudo containerd config default | sudo tee /etc/containerd/config.toml
        sudo systemctl restart containerd

    - name: Disable swap
      shell: |
        sudo swapoff -a
        sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet=1.23.0-00
          - kubeadm=1.23.0-00
          - kubectl=1.23.0-00

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: install kubernetes
      shell: |
        sudo apt-get update
        sudo apt-mark hold kubelet kubeadm kubectl

    #  - name: install and configure dependencies
    #    shell: |
    #            sudo apt-get update && sudo apt-get install -y apt-transport-https curl
    #            curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

    #  - name: Create kubernetes repo file
    #    file:
    #      path: "/etc/apt/sources.list.d/kubernetes.list"
    #      state: "touch"

    #  - name: Add K8s Source
    #    blockinfile:
    #      path: "/etc/apt/sources.list.d/kubernetes.list"
    #      block: |
    #            deb https://apt.kubernetes.io/ kubernetes-xenial main

    #  - name: install kubernetes
    #    shell: |
    #            sudo apt-get update
    #            sudo apt-get install -y kubelet=1.20.1-00 kubeadm=1.20.1-00 kubectl=1.20.1-00
    #            sudo apt-mark hold kubelet kubeadm kubectl
